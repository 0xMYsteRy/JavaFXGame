package Menu_JAVA;

import javafx.animation.ScaleTransition;
import javafx.animation.TranslateTransition;
import javafx.application.Application;
import javafx.application.Platform;
import javafx.beans.binding.Bindings;
import javafx.geometry.Pos;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.effect.BoxBlur;
import javafx.scene.effect.DropShadow;
import javafx.scene.effect.Effect;
import javafx.scene.effect.GaussianBlur;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.HBox;
import javafx.scene.layout.Pane;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.scene.shape.Polygon;
import javafx.scene.shape.Rectangle;
import javafx.scene.text.Font;
import javafx.scene.text.Text;
import javafx.stage.Stage;
import javafx.util.Duration;
import javafx.util.Pair;

import java.io.FileNotFoundException;
import java.util.Arrays;
import java.util.List;

public class Setting extends Application {
    Pane root = new Pane();
    private final VBox settingBox = new VBox(-5);
    MainMenu mainMenu;
    private final List<Pair<String, Runnable>> settingData = Arrays.asList(
            new Pair<String, Runnable>("Control", () -> {
                System.out.println("Control activated");
            }),
            new Pair<String, Runnable>("FAQ", () -> {
                System.out.println("FAQ activated");
            }),
            new Pair<String, Runnable>("Credit", () -> {
                System.out.println("Credit activated");
            }),
            new Pair<String, Runnable>("Contact us", () -> {
                System.out.println("Contact activated");
            }),
            new Pair<String, Runnable>("Exit", () -> {
                try {
                    handleCloseButtonAction();
                } catch (FileNotFoundException e) {
                    e.printStackTrace();
                }
            })
    );

    public Setting() throws FileNotFoundException {
   }

    public Parent createSettingContent() throws FileNotFoundException {
        mainMenu= new MainMenu();

        root.setPrefSize(1280, 720);

        String imagePath = "file:src/Menu_JAVA/res/background.png";
        ImageView background = new ImageView(new Image(imagePath));

        Text settingTitle = new Text("SETTING");
        settingTitle.setTranslateX(1500);
        settingTitle.setTranslateY(50);
        settingTitle.setFill(Color.GREY);
        settingTitle.setStroke(Color.WHITE);
        settingTitle.setOnMouseClicked(e->{
            settingTitle.setFill(Color.BLACK);
        });
        settingTitle.setFont(Font.loadFont(MainMenu.class.getResource("res/Penumbra-HalfSerif-Std_35114.ttf").toExternalForm(), 30));

        Text language = new Text("Language");
        language.setFont(Font.loadFont(MainMenu.class.getResource("res/Penumbra-HalfSerif-Std_35114.ttf").toExternalForm(), 20));
        Button eng = new Button("English");
        eng.setMinWidth(100);
        eng.setMinHeight(20);
        eng.setOnMouseClicked(e -> {
        });
        Button vn = new Button("Tiếng Việt");
        vn.setMinWidth(100);
        vn.setMinHeight(20);
        vn.setOnMouseClicked(e -> {
        });
        HBox languageBox = new HBox(20, language, eng, vn);
        languageBox.setTranslateX(20);
        languageBox.setTranslateY(120);

        Button control = new Button("Control");
        control.setMinWidth(100);
        control.setMinHeight(20);
        Button faq = new Button("FAQ");
        faq.setMinHeight(20);
        faq.setMinWidth(100);
        HBox hbox1 = new HBox(20, control, faq);
        hbox1.setTranslateX(20);
        hbox1.setTranslateY(170);

        Button credit = new Button("Credits");
        credit.setMinWidth(100);
        credit.setMinHeight(20);
        Button contact = new Button("Contact us");
        contact.setMinWidth(100);
        contact.setMinHeight(20);
        HBox hbox2 = new HBox(20, credit, contact);
        hbox2.setTranslateX(20);
        hbox2.setTranslateY(220);

        Button closeButton = new Button("Close");
        closeButton.setMinWidth(400);
        closeButton.setMinHeight(30);
        closeButton.setAlignment(Pos.BOTTOM_CENTER);
        closeButton.setTranslateY(270);
//        closeButton.setOnMouseClicked(mouseEvent -> {
//            try {
//                handleCloseButtonAction(mouseEvent);
//            } catch (FileNotFoundException e) {
//                e.printStackTrace();
//                System.out.println("Wrong at setting call menu");
//            }
//        });

        addSettingMenu(450, 300);
        startAnimation();

        root.getChildren().addAll(background,settingTitle, languageBox);
        return root;
    }

    public static class SettingItem extends Pane {

        private SettingItem(String name) {
            Polygon bg = new Polygon(0, 0, 200, 0, 215, 15, 200, 30, 0, 30);
            bg.setStroke(Color.color(1, 1, 1, 0.75));
            bg.setEffect(new GaussianBlur());

            bg.fillProperty().bind(
                    Bindings.when(pressedProperty())
                            .then(Color.color(0, 0, 0, 0.75))
                            .otherwise(Color.color(0, 0, 0, 0.25))
            );

            Text text = new Text(name);
            text.setTranslateX(5);
            text.setTranslateY(20);
            text.setFont(Font.loadFont(MainMenu.class.getResource("res/Penumbra-HalfSerif-Std_35114.ttf").toExternalForm(), 30));
            text.setFill(Color.WHITE);

            Effect blur = new BoxBlur(1, 1, 3);
            Effect shadow = new DropShadow(5, Color.BLACK);
            text.effectProperty().bind(
                    Bindings.when(hoverProperty())
                            .then(shadow)
                            .otherwise(blur)
            );

            getChildren().addAll(bg, text);
        }

    }

    private void startAnimation() {
        ScaleTransition st = new ScaleTransition(Duration.seconds(1));
        st.setToY(1);
        st.setOnFinished(e -> {

            for (int i = 0; i < settingBox.getChildren().size(); i++) {
                Node n = settingBox.getChildren().get(i);

                TranslateTransition tt = new TranslateTransition(Duration.seconds(1 + i * 0.15), n);
                tt.setToX(0);
                tt.setOnFinished(e2 -> n.setClip(null));
                tt.play();
            }
        });
        st.play();
    }

    private void addSettingMenu(double x, double y) {
        settingBox.setTranslateX(x);
        settingBox.setTranslateY(y);
        settingData.forEach(data -> {
            SettingItem item = new SettingItem(data.getKey());
            item.setTranslateX(-200);

            Rectangle clip = new Rectangle(300, 30);
            clip.translateXProperty().bind(item.translateXProperty().negate());

            item.setClip(clip);

            settingBox.getChildren().addAll(item);
        });

        root.getChildren().add(settingBox);
    }


    public void handleCloseButtonAction() throws FileNotFoundException {
        primaryStage.getStage().setScene(new Scene(mainMenu.createContent()));
//        ((Stage)(((Button)event.getSource()).getScene().getWindow())).close();
    }



    @Override
    public void start(Stage settingStage) throws Exception {
        Scene scene = new Scene(createSettingContent());
        settingStage.setTitle("Setting");
        settingStage.setScene(scene);
        settingStage.show();
    }
}

